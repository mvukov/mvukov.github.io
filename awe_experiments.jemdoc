# jemdoc: menu{MENU}{applications.html}, nofooter
= Rotational Start-up of an Airborne Wind Energy System

\n
/Alright, what is Airborne Wind Energy (AWE) about?/ Good one, you can find more about it [http://en.wikipedia.org/wiki/Airborne\_wind\_turbine here] or just take a look at the video below.

\n
~~~
{}{raw}
<div align="center">
<iframe width="640" height="390" src="http://www.youtube.com/embed/1UmN3MiR65E" frameborder="0" allowfullscreen></iframe>
</div>
~~~
\n

And what were we doing at KU Leuven? Among many amazing things, we have used to spend huge amount of time modeling, simulating, optimizing and controlling AWE systems. Before the energy production, one needs to launch the kite in the sky. One way to do it is to utilize the concept of rotational start-up. We have made a small scale setup at our lab and we used that setup for testing and demonstration purposes. In particular, to play with fast algorithms and solvers for nonlinear Model Predictive Control (NMPC) and moving horizon estimation (MHE).

\n
~~~
{}{raw}
<div align="center">
<iframe width="640" height="390" src="http://www.youtube.com/embed/qta9N8gNRyk" frameborder="0" allowfullscreen></iframe>
</div>
~~~
\n

About you can see then work-in-progress video (Q4 2014) of a first person view on the Leuven kite carousel experiments. Here we demonstrated the closed loop performance with NMPC and MHE. The goal of the experiments was to achieve stable movements from one steady state to the other one, which are characterized mostly by the roll angle and the heigth of the plane.

The screen on the left serves for live feed of the data coming from sensors and the data the controllers send to the actuators:
- upper row: gyroscope, accelerometer and winch data.
- lower row: control surfaces (ailerons and the elevator control surfaces' deflection angles), main motor speed and control, and the line angle sensor data.

You can see the MHE horizons on the screen on right. The current pose estimate is the one which is not shaded.

The system is modelled with an index-3 DAE ($n_x$ = 27, $n_u$ = 4, $n_z$ = 1). Both MHE and the NMPC work at 25 Hz rate in a unified control-estimation cycle. Horizon for the MHE was set to be $N_\text{MHE} = 30$ intervals (1.2 seconds) and for the controller we chose $N_\text{NMPC} = 50$ intervals (2 seconds).

== Links to some software used for experiments

- [http://www.acadotoolkit.org ACADO toolkit] -- code generation for nonlinear MPC and MHE
- [http://www.casadi.org CasADi] -- nonlinear optimization, code generation for symbolics
- [https://github.com/giaf/hpmpc HPMPC] -- QP solver for linear MPC and MHE
- [http://www.orocos.org OROCOS] -- real-time middleware
- [http://www.pyqtgraph.org/ PyQtGraph] -- real-time capable line plotter in Python (yes, in Python)
- [http://www.qpoases.org qpOASES] -- QP solver
- [https://github.com/ghorn/rawesome rawesome] -- modeling environment for AWE
